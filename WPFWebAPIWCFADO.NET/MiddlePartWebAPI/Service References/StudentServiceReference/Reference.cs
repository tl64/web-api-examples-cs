//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiddlePartWebAPI.StudentServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentServiceReference.IBackStudentService")]
    public interface IBackStudentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/GetAllStudents", ReplyAction="http://tempuri.org/IBackStudentService/GetAllStudentsResponse")]
        System.Data.DataTable GetAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/GetAllStudents", ReplyAction="http://tempuri.org/IBackStudentService/GetAllStudentsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/GetStudentByID", ReplyAction="http://tempuri.org/IBackStudentService/GetStudentByIDResponse")]
        System.Data.DataTable GetStudentByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/GetStudentByID", ReplyAction="http://tempuri.org/IBackStudentService/GetStudentByIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetStudentByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/AddStudent", ReplyAction="http://tempuri.org/IBackStudentService/AddStudentResponse")]
        void AddStudent(ServiceWCF.Student[] students);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/AddStudent", ReplyAction="http://tempuri.org/IBackStudentService/AddStudentResponse")]
        System.Threading.Tasks.Task AddStudentAsync(ServiceWCF.Student[] students);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/UpdateStudent", ReplyAction="http://tempuri.org/IBackStudentService/UpdateStudentResponse")]
        void UpdateStudent(int id, ServiceWCF.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/UpdateStudent", ReplyAction="http://tempuri.org/IBackStudentService/UpdateStudentResponse")]
        System.Threading.Tasks.Task UpdateStudentAsync(int id, ServiceWCF.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/RemoveStudent", ReplyAction="http://tempuri.org/IBackStudentService/RemoveStudentResponse")]
        void RemoveStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackStudentService/RemoveStudent", ReplyAction="http://tempuri.org/IBackStudentService/RemoveStudentResponse")]
        System.Threading.Tasks.Task RemoveStudentAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBackStudentServiceChannel : MiddlePartWebAPI.StudentServiceReference.IBackStudentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BackStudentServiceClient : System.ServiceModel.ClientBase<MiddlePartWebAPI.StudentServiceReference.IBackStudentService>, MiddlePartWebAPI.StudentServiceReference.IBackStudentService {
        
        public BackStudentServiceClient() {
        }
        
        public BackStudentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BackStudentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BackStudentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BackStudentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAllStudents() {
            return base.Channel.GetAllStudents();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllStudentsAsync() {
            return base.Channel.GetAllStudentsAsync();
        }
        
        public System.Data.DataTable GetStudentByID(int id) {
            return base.Channel.GetStudentByID(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetStudentByIDAsync(int id) {
            return base.Channel.GetStudentByIDAsync(id);
        }
        
        public void AddStudent(ServiceWCF.Student[] students) {
            base.Channel.AddStudent(students);
        }
        
        public System.Threading.Tasks.Task AddStudentAsync(ServiceWCF.Student[] students) {
            return base.Channel.AddStudentAsync(students);
        }
        
        public void UpdateStudent(int id, ServiceWCF.Student student) {
            base.Channel.UpdateStudent(id, student);
        }
        
        public System.Threading.Tasks.Task UpdateStudentAsync(int id, ServiceWCF.Student student) {
            return base.Channel.UpdateStudentAsync(id, student);
        }
        
        public void RemoveStudent(int id) {
            base.Channel.RemoveStudent(id);
        }
        
        public System.Threading.Tasks.Task RemoveStudentAsync(int id) {
            return base.Channel.RemoveStudentAsync(id);
        }
    }
}
